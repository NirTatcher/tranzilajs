name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  validate:
    name: Validate Code Quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '22']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Install dependencies
        run: npm install
        
      - name: Validate dependencies installation
        run: |
          echo "🔍 Validating dependencies installation..."
          if [ ! -d "node_modules" ]; then
            echo "❌ ERROR: Dependencies not properly installed!"
            echo "node_modules directory is missing."
            echo "This indicates an npm installation failure."
            exit 1
          fi
          
          # Check if all dependencies from package.json are installed
          npm ls --depth=0 || {
            echo "❌ ERROR: Some dependencies are missing or have conflicts!"
            echo "Please check the npm installation output above for details."
            exit 1
          }
          echo "✅ Dependencies validation passed"
          
      - name: Run linting and type checking
        run: |
          npm run type-check
          echo "✅ Type checking passed"
          
      - name: Run tests
        run: |
          npm test
          echo "✅ All tests passed"
          
      - name: Build package
        run: |
          npm run build
          echo "✅ Build successful"
          
      - name: Verify package contents
        run: |
          echo "📦 Package contents:"
          ls -la dist/
          echo "📊 Package size:"
          du -sh dist/
          
      - name: Test package compatibility
        run: |
          npm run test:compatibility
          echo "✅ Package compatibility tests passed"
          
      - name: Test package locally
        run: |
          npm pack
          echo "✅ Package created successfully"
          echo "📦 Package file:"
          ls -la *.tgz
          
      - name: Cleanup
        run: |
          rm -f *.tgz
          echo "✅ Cleanup completed" 